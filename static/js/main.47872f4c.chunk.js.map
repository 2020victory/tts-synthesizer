{"version":3,"sources":["App.js","services.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","button","margin","spacing","App","classes","useState","blob","setBlob","text","setText","loading","setLoading","AppBar","position","Toolbar","Typography","variant","Grid","container","justify","alignItems","direction","style","minHeight","item","TextField","label","multiline","rows","color","value","onChange","e","target","Button","className","startIcon","onClick","url","callback","data","undefined","console","log","fetch","then","res","status","headers","get","URL","createObjectURL","catch","disabled","controls","src","type","Link","href","download","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","secondary","main","primary","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"ySAcMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,OAAQF,EAAMG,QAAQ,QAyFXC,MAnFf,WACE,IAAMC,EAAUP,IADH,EAEWQ,mBAAS,MAFpB,mBAENC,EAFM,KAEAC,EAFA,OAGWF,mBAAS,IAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAIiBJ,oBAAS,GAJ1B,mBAINK,EAJM,KAIGC,EAJH,KAoBb,OACE,qCACE,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4CAGJ,eAACC,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,SACRC,WAAW,SACXC,UAAU,SACVC,MAAO,CAAEC,UAAW,QACpBrB,QAAS,EANX,UAQE,cAACe,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,aACNC,WAAS,EACTC,KAAM,EACNZ,QAAQ,WACRa,MAAM,YACNC,MAAOtB,EACPuB,SAAU,SAACC,GAAD,OAAOvB,EAAQuB,EAAEC,OAAOH,YAGtC,cAACb,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,cAACU,EAAA,EAAD,CACElB,QAAQ,YACRa,MAAM,UACNM,UAAW/B,EAAQJ,OACnBoC,UAAW,cAAC,IAAD,IACXC,QA9CO,WC5BO,IAACC,EAAKC,EAALD,ED6BZ,GAAD,OATD,wBASC,uBAAuB9B,IC7BL+B,ED6Ba,SAACC,GACpCA,GACF7B,GAAW,GACXJ,EAAQiC,SACUC,IAATD,EACT7B,GAAW,IAEX+B,QAAQC,IAAI,UACZhC,GAAW,QCnCfiC,MAAMN,GACDO,MAAK,SAACC,GACH,GAAmB,MAAfA,EAAIC,OAGJ,OAFAR,EAAS,WACTG,QAAQC,IAAIG,GAII,cADAA,EAAIE,QAAQC,IAAI,gBAEhCH,EACKxC,OACAuC,MAAK,SAACvC,GAAD,OAAU4C,IAAIC,gBAAgB7C,MACnCuC,MAAK,SAACC,GAAD,OAASP,EAASO,OAE5BJ,QAAQC,IAAIG,GACZP,EAAS,UAGhBa,OAAM,kBAAMb,EAAS,UDuDlBc,SAAU3C,EANZ,8BAWDJ,GACC,qCACE,cAACW,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,wBAAO8B,UAAQ,EAAf,UACE,wBAAQC,IAAKjD,EAAMkD,KAAK,cAD1B,wDAKF,cAACvC,EAAA,EAAD,CAAMO,MAAI,EAAV,SACE,cAACiC,EAAA,EAAD,CACE5B,MAAM,UACNM,UAAW/B,EAAQJ,OACnB0D,KAAMpD,EACNqD,SAAU,YAJZ,kCE7ECC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCMC9D,EAXDqE,YAAe,CACzBC,QAAS,CACPC,UAAW,CACTC,KAAM,WAERC,QAAS,CACPD,KAAM,cCAdE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,CAAe7E,MAAOA,EAAtB,SACA,cAAC,EAAD,QAGF8E,SAASC,eAAe,SAM1BlB,M","file":"static/js/main.47872f4c.chunk.js","sourcesContent":["import {\r\n  Grid,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  TextField,\r\n  Button,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GraphicEqIcon from \"@material-ui/icons/GraphicEq\";\r\nimport { useState } from \"react\";\r\nimport { fetchAudio } from \"./services\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst HOST = \"http://127.0.0.1:5000\";\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [blob, setBlob] = useState(null);\r\n  const [text, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getAudio = () => {\r\n    fetchAudio(`${HOST}/audio/file/${text}`, (data) => {\r\n      if (data) {\r\n        setLoading(false);\r\n        setBlob(data);\r\n      } else if (data === undefined) {\r\n        setLoading(true);\r\n      } else {\r\n        console.log(\"failed\");\r\n        setLoading(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h5\">Text To Speech Synthesizer</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Grid\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n        direction=\"column\"\r\n        style={{ minHeight: \"90vh\" }}\r\n        spacing={2}\r\n      >\r\n        <Grid item>\r\n          <TextField\r\n            label=\"Text Input\"\r\n            multiline\r\n            rows={4}\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.button}\r\n            startIcon={<GraphicEqIcon />}\r\n            onClick={getAudio}\r\n            disabled={loading}\r\n          >\r\n            Generate Audio\r\n          </Button>\r\n        </Grid>\r\n        {blob && (\r\n          <>\r\n            <Grid item>\r\n              <audio controls>\r\n                <source src={blob} type=\"audio/wav\" />\r\n                Your browser does not support the audio element.\r\n              </audio>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link\r\n                color=\"primary\"\r\n                className={classes.button}\r\n                href={blob}\r\n                download={\"audio.wav\"}\r\n              >\r\n                Download\r\n              </Link>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export const fetchAudio = (url, callback) => {\r\n    callback();\r\n    fetch(url)\r\n        .then((res) => {\r\n            if (res.status !== 200) {\r\n                callback(null);\r\n                console.log(res);\r\n                return;\r\n            }\r\n            const contentType = res.headers.get(\"Content-Type\");\r\n            if (contentType === \"audio/wav\") {\r\n                res\r\n                    .blob()\r\n                    .then((blob) => URL.createObjectURL(blob))\r\n                    .then((res) => callback(res));\r\n            } else {\r\n                console.log(res);\r\n                callback(null);\r\n            }\r\n        })\r\n        .catch(() => callback(null));\r\n};","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      secondary: {\r\n        main: '#dd2c00',\r\n      },\r\n      primary: {\r\n        main: '#4fb3bf',\r\n      },\r\n    },\r\n  });\r\n\r\nexport default theme;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport theme from './theme';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n    <App />\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}